#!/bin/bash

function file_extension() {
	echo $1 | sed 's/^[^\.]*\.//g'
}

function source_file() {
	extension=$1
	template_files=$CODETEMPL_ROOT/code_templates
	echo "$template_files/code-template.$extension"
}

function item_in_list() {
	item=$1; shift
	list=$@
	for x in $list; do
		if [ "$x" == "$item" ]; then
			return 0
		fi
	done
	return 1
}


definitions=LanguageDefinitions.txt
definitions="$CODETEMPL_ROOT/$definitions"

comments='s/#.*$//'; lines='/^\s*$/d'

languages=$(sed -e $comments -e $lines -e 's/\s.*//' $definitions)
file_extensions=$(sed -e $comments -e $lines -e 's/.*\s//' $definitions)


declare -A extension_dict
exts=($file_extensions)
i=0; for lang in $languages
do
	extension_dict[$lang]=${exts[$i]}
	i=$(( $i + 1 ))
done
unset exts


for entry in $@
do

	if item_in_list $entry $languages
	then
		echo 'going off language based on language'
		ext=${extension_dict[$entry]}
		contents=$(source_file $ext)
		filename="code.$ext"

	elif item_in_list $entry $file_extensions
	then
		echo 'going off language based on file extension'
		ext=$entry
		contents=$(source_file $ext)
		filename="code.$ext"

	elif item_in_list $(file_extension $entry) $file_extensions
	then
		echo 'going off filename'
		ext=$(file_extension $entry)
		contents=$(source_file $ext)
		filename=$entry

	else
		echo "invalid input: $entry"
		exit 1
	fi


	if [ ! -f $filename  ]
	then
		echo "none exist. will make"
		cp $contents $filename
		if [ $(file_extension $filename) = 'java' ]
		then
			if [ $filename != 'code.java' ]
			then
				sed -i "s/class Code/public class ${filename//.java/}/" $filename 
			fi
		fi
	else
		echo "file '$filename' already exists"
	fi

done

